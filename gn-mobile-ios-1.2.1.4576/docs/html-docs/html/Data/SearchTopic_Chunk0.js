define({"0":{i:0.00917431509720665,u:"../Content/shared-topics/front_back_matter/OOHelpSystemTitlePageOnline.html",a:"GNSDK for Mobile (iOS) Help System Release 1.2.1.4576   Published:\n\n\t\t7/1/2016 1:15 PM   Start here:  Documentation Roadmap     Gracenote, Inc. 2000 Powell Street, Suite 1500  Emeryville, California  94608-1804  www.gracenote.com\n    ",t:"OOHelpSystemTitlePageOnline"},"1":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/About Gracenote.html",a:"A pioneer in the digital media industry, Gracenote combines information, technology, services, and applications to create ingenious entertainment solutions for the global market.  From media management, enrichment, and discovery products to content identification technologies, Gracenote allows ...",t:"About Gracenote"},"2":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/What is Gracenote SDK.html",a:"What is Gracenote SDK? Gracenote SDK (GNSDK) is a platform that delivers Gracenote technologies to devices, desktop applications, web sites, and backend servers. GNSDK enables easy integration of Gracenote technologies into customer applications and infrastructure—helping developers add critical ...",t:"What is Gracenote SDK"},"3":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Modules Overview.html",a:"GNSDK consists of several modules that support specific Gracenote\n\t\t\tproducts. The principal module required for all applications is the\n\t\t\tGNSDK Manager. Other modules are optional, depending on the functionality of\n\t\tthe applications you develop and the products you license from Gracenote. The ...",t:"Modules Overview"},"4":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Gracenote Media Elements.html",a:"Gracenote Media Elements are the software representations of real-world things like CDs, Albums, Tracks, Contributors, and so on. The following is a partial list of the higher-level media elements represented in  GNSDK for Mobile: Music Music CD Album Track Artist Contributor",t:"Gracenote Media Elements"},"5":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Music Terminology.html",a:"The following terms are used throughout the music documentation. For a detailed list of GNSDK terms and definitions, see the Glossary. Album - A collection of audio recordings, typically of songs or instrumentals. Audio Work - A collection of classical music recordings. Track - A song or ...",t:"Music Terminology"},"6":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Genre and Other List-Dependent Values.html",a:"GNSDK for Mobile  uses list structures to store strings and other information that do not directly appear in results returned from Gracenote Service. Lists generally contain information such as localized strings and region-specific information. Each list is contained in a corresponding List Type. ...",t:"Genre and Other List-Dependent Values"},"7":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Core and Enriched Metadata.html",a:"All Gracenote customers can access core metadata from Gracenote for the products they license. Optionally, customers can retrieve additional metadata, known as enriched metadata, by purchasing additional metadata entitlements. The following diagram shows the core and enriched metadata available for ...",t:"Core and Enriched Metadata"},"8":{i:0.0130734550867611,u:"../Content/shared-topics/concepts/Mood and Tempo Sonic Attributes.html",a:"Mood and Tempo (Sonic Attributes) Gracenote provides two metadata fields that describe the sonic attributes of an audio track. These fields, mood and tempo, are track-level descriptors that capture the unique characteristics of a specific recording. MoodTrack-level perceptual descriptor of a piece ...",t:"Mood and Tempo Sonic Attributes"},"9":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Classical Music Metadata.html",a:"  Gracenote also supports classical music metadata, which is typically more complex than non-classical music. Gracenote uses a Three-Line Solution ( TLSSee Three-Line-Solution. ) to map classical metadata to an AUDIO_WORK Track, Artist, and Album media elements. The tables below show this mapping. ...",t:"Classical Music Metadata"},"10":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Third-Party Identifiers and Preferred Partners.html",a:"Link can match identified media with third-party identifiers. This allows applications to match media to IDs in stores and other online services—facilitating transactions by helping connect queries directly to commerce.\n Gracenote has preferred partnerships with several partners and matches ...",t:"Third-Party Identifiers and Preferred Partners"},"11":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Music Module Overview.html",a:"Music Modules The following diagram shows the kinds of identification queries each music module supports. ",t:"Music Module Overview"},"12":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/MusicID Overview.html",a:"MusicID allows application developers to deliver a compelling digital entertainment experience by giving users tools to manage and enjoy music collections on media devices, including desktop and mobile devices. MusicID is the most comprehensive identification solution in the industry with the ...",t:"MusicID Overview"},"13":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/CD TOC Recognition.html",a:"MusicID-CD is the component of  GNSDK for Mobile that handles recognition of audio CDs and delivery of information including artist, title, and track names. The application provides GNSDK for Mobile with the  TOCTable of Contents. An area on CDs, DVDs, and Blu-ray discs that describes the unique ...",t:"CD TOC Recognition"},"14":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Text-Based Recognition.html",a:"You can identify music by using a lookup based on text strings. The text strings can be extracted from an audio track’s file path name and from text data embedded within the file, such as mp3 tags. You can provide the following types of input strings: Album title Track title Album artist Track ...",t:"Text-Based Recognition"},"15":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Fingerprint-Based Recognition.html",a:" Gracenote uses audio fingerprinting as one method to identify tracks.   GNSDK for Mobile can generate audio fingerprints from audio files and from streaming audio sources, including recorded and degraded sources such as radios and televisions.  Your application can retain fingerprints for a ...",t:"Fingerprint Identification Audio Formats "},"16":{i:0.0281232843825388,u:"../Content/shared-topics/concepts/MusicID-File Overview.html",a:"MusicID-File provides advanced file-based identification features not included in the MusicID module. MusicID-File can perform recognition using individual files or leverage collections of files to provide advanced recognition. When an application provides decoded audio and text data for each file ...",t:"MusicID-File Overview"},"17":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/MusicID vs. MusicID-File.html",a:"Deciding whether to use the MusicID or MusicID-File SDK depends upon whether you are doing a \"straightforward lookup\" or \"media recognition.\"\n Use the MusicID SDK to perform a straightforward lookup.\nA lookup is considered straightforward if the application has a single type of data and would like ...",t:"MusicID vs. MusicID-File"},"18":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/MusicID-Stream.html",a:"  You can use  MusicID-Stream  to recognize music delivered as a continuous stream.\nSpecifically,  MusicID-Stream  enables these features: Recognizes streaming music in real time and on-demand (user-initiated). Automatically manages buffering of streaming audio. Continuously identifies the audio ...",t:"MusicID-Stream"},"19":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Link Module Overview.html",a:"Link (Content) Module Overview The Link module allows applications to access enriched content beyond standard core metadata. The diagram below show the difference between core metadata and enriched content for music.  Link allows applications to access and present enriched content related to media ...",t:"Link Module Overview"},"20":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Music Enrichment.html",a:"Link provides access to Gracenote Music Enrichment—a single-source solution for enriched content including cover art, artist images, biographies, and reviews. Link and Music Enrichment allow applications to offer enriched user experiences by providing high quality images and information to ...",t:"Music Enrichment"},"21":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Image Formats and Dimensions.html",a:"Gracenote provides images in several dimensions to support a variety of applications. Applications or devices must specify image size when requesting an image from Gracenote. All Gracenote images are provided in the JPEG (.jpg) image format. Available Image Dimensions Gracenote provides images to ...",t:"Image Formats and Dimensions"},"22":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Playlists Overview.html",a:"PlaylistA set of tracks from a user’s music collection, generated according to the criteria and limits defined by a playlist generator.  provides advanced playlist generation enabling a variety of intuitive music navigation methods. Using Playlist, applications can create sets of related media from ...",t:"Playlists Overview"},"23":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Playlist Requirements.html",a:".Playlist Requirements and Recommendations This topic discusses requirements and recommendations for your  PlaylistA set of tracks from a user’s music collection, generated according to the criteria and limits defined by a playlist generator.  implementation. Simplified Playlist Implementation ...",t:"Playlist Requirements and Recommendations"},"24":{i:0.0130734550867611,u:"../Content/shared-topics/concepts/Key Playlist Components.html",a:"PlaylistA set of tracks from a user’s music collection, generated according to the criteria and limits defined by a playlist generator.  operates on several key components. The  GNSDK for Mobile Playlist module provides functions to implement and manage the following key components within your ...",t:"Key Playlist Components"},"25":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/mood-overview/Mood Overview.html",a:"Gracenote provides track-based mood data that allow users to generate playlists based on the mood they want to listen to. When the user selects a mood, the application provides a playlist of music that corresponds to the selected mood. An important advantage of  MoodTrack-level perceptual descriptor ...",t:"Mood Overview"},"26":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/mood-overview/Mood Descriptors.html",a:"MusicID, MusicID-File, and  MusicID-Stream   return mood metadata in track results. Gracenote defines over 100 mood types. This granularity of moods is useful in non-automotive applications, such as desktop and tablet interfaces.  To simplify mood selection for with limited size interfaces,   ...",t:"Mood Descriptors"},"27":{i:0.0169725950763155,u:"../Content/shared-topics/concepts/mood-overview/Navigating with Mood.html",a:"This topic suggests some possible UI designs for mood-based playlists. The designs presented are suggestions only. The  MoodTrack-level perceptual descriptor of a piece of music, using emotional terminology that a typical listener might use to describe the audio track; includes hierarchical ...",t:"Navigating with Mood"},"28":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/mood-overview/Mood Level Arousal Valance.html",a:"The tables below list the Valence/Arousal value mappings for Level 1 and Level 2 mood levels. Level 1 Mood Levels  MoodTrack-level perceptual descriptor of a piece of music, using emotional terminology that a typical listener might use to describe the audio track; includes hierarchical categories of ...",t:"Mood Level Arousal/Valance Values"},"29":{i:0.00917431509720665,u:"../Content/shared-topics/platform-topics/System Requirements.html",a:"Supported Platforms and System Requirements GNSDK for Mobile provides multi-threaded, thread-safe technology for a wide variety of platforms and languages. For a detailed list of these, see the Release Notes included in the software package. ",t:"System Requirements"},"30":{i:0.00917431509720665,u:"../Content/shared-topics/platform-topics/ModulesInPackage.html",a:"GNSDK provides the following modules for application development. For more information about these modules, search this documentation or refer to the table of contents. GNSDK for Mobile Modules DSP LOOKUP_LOCALSTREAM MANAGER MOOD MUSICID MUSICID_FILE MUSICID_STREAM PLAYLIST STORAGE_SQLITE",t:"Modules in the GNSDK Package"},"31":{i:0.00917431509720665,u:"../Content/shared-topics/platform-topics/Memory Usage.html",a:"The memory usage of  GNSDK for Mobile depends on a number of different factors, including the use of multiple threads, type of recognition, size of a user\u0027s collection, number of simultaneous devices connected, metadata requested, and so on. Typical integrations can use anywhere from 5 MB to 30 MB ...",t:"Memory Usage"},"32":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/MobileiOSImplementationGuide.html",a:"iOS",t:"iOS"},"33":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Deployment.html",a:"GNSDK for Mobile  is delivered as an Xcode project that can be integrated into an iPhone development environment that uses the Xcode integrated development environment (IDE). Creating an iPhone Development Environment iPhone development requires a specific environment. The details of creating such ...",t:"Deployment"},"34":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Advanced Implementations.html",a:"Application Transport Security If your application makes an unsecured connection, an ATS error message will appear in the iOS 9.0 log. The mobile sample app does not make a direct connection using NSURLConnection anymore. The  GnAssetFetch class is now used fetching coverart and artist images. If ...",t:"Advanced Implementations"},"35":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Getting Started with the iOS.html",a:"Getting Started with Mobile iOS",t:"Getting Started with the iOS Sample Application 3 1"},"36":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Introduction.html",a:"The  GNSDK for Mobile Software Development Kit (SDK) provides the GracenoteMusicId sample application that demonstrates Gracenote features. This project shows how to incorporate the GNSDK for Mobile  into your iOS application. This document describes how to integrate the sample application project ...",t:"Introduction"},"37":{i:0.00917431509720665,u:"../Content/mobile/mobile_concepts/Metadata of Songs.html",a:"Fingerprint and Metadata Samples Gracenote provides a local cache of fingerprints and metadata of some sample songs. The SDK uses this data to attempt a local ID prior to attempting an online lookup. The SDK provides song samples in the sample_music folder that you can use to test local lookup ...",t:"Metadata of Songs"},"38":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Preparing Your iPhone Development.html",a:"Setting Up the Development Environment iOS development requires a specific environment. For details on setting up this environment, refer to the instructions at the Apple iOS Dev Center:  http://developer.apple.com/devcenter/ios/ . You also must register as an Apple Developer to download the ...",t:"Preparing Your iPhone Development Environment"},"39":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Technical Requirements.html",a:"Framework Size The framework size reflects the combined size of the universal framework for all iOS architectures: armv7 and armv7s for the device, and i386 for the simulator. The total executable code for any single architecture is ~2.2MB. When linking the framework to your compiled application, ...",t:"Technical Requirements"},"40":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Installing the iOS SDK.html",a:"GNSDK for Mobile  Sample Application uses the iOS v7 and XCode version 5 or later. Ensure your development environment supports these versions. Follow the steps below to install the appropriate iOS SDK: Go to the iOS Dev Center:  http://developer.apple.com/devcenter/ios/index.action Download the iOS ...",t:"Installing the iOS SDK"},"41":{i:0.00917431509720665,u:"../Content/mobile/mobile_ios/i_Running the Sample Applications.html",a:"Building and Running the Sample Applications To run either of the sample applications: Unpack the Gracenote iOS  GNSDK for Mobile package: gn-mobile-ios-\u003cversion\u003e.zip Copy your license file, names as \"license.txt\", into the package root directory. The Xcode project expects the license file to have ...",t:"Running the Sample Applications"},"42":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/About the Implementing Applications Documentation.html",a:"This section is intended as a general guide for applications using the object-oriented GNSDK, which supports development in a number of object-oriented languages such as C++, C#, Java, Android Java and Objective-C. This document discusses classes and methods in a generic sort of way while showing ...",t:"About the Implementing Applications Documentation"},"43":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Basic Application Steps.html",a:"To get started with GNSDK development, Gracenote recommends you follow these general steps, some of which are required and some of which are optional but recommended: Required initialization—see  \"Setup and Initialization\" :\n\t\t\t Get authentication —Get a  Client IDEach  customer receives a unique ...",t:"Basic Application Steps"},"44":{i:0.0176508335089222,u:"../Content/oo-topics/oo_implementing/Setup and Initialization.html",a:"To get started with GNSDK development: Get a  Client IDEach  customer receives a unique Client ID string from Gracenote. This string uniquely identifies each application and lets Gracenote deliver the specific features for which the application is licensed. \nThe Client ID string has the following ...",t:"Setup and Initialization"},"45":{i:0.023482971081018,u:"../Content/oo-topics/oo_implementing/Loading a Locale.html",a:"GNSDK provides locales  as a convenient way to group locale-dependent metadata specific to a region (such as Europe) and language that should be returned from the Gracenote Service. A locale is defined by a group (such as Music), a language, a region and a descriptor (indicating level of metadata ...",t:"Loading a Locale"},"46":{i:0.0676205378112752,u:"../Content/oo-topics/oo_implementing/Using Gracenote SDK Logging.html",a:"The GnLog class has methods to enable Gracenote SDK logging, set options, write to the SDK log, and disable SDK logging.  There are 3 approaches you can take to implementing logging using the GNSDK: Enable GNSDK logging—This creates log file(s) that you and Gracenote can use to evaluate and debug ...",t:"Using Gracenote SDK Logging"},"47":{i:0.0502451755355532,u:"../Content/oo-topics/oo_implementing/Enabling and Using GNSDK Storage .html",a:"To improve performance, your application can enable internal GNSDK storage and caching. The GNSDK has two kinds of storage, each managed through a different class: Online stores for lookups—The GNSDK generates these as lookups take place. Use GnStoreOps methods to manage these.  Local lookup ...",t:"Enabling and Using GNSDK Storage"},"48":{i:0.0191695403111661,u:"../Content/oo-topics/oo_implementing/Using a Local Fingerprint Database.html",a:"Gracenote provides a mechanism for you to use a local database of track fingerprints and metadata for identification. The SDK can use this database to attempt a local ID prior to going online. Doing this provides a significant performance improvement if a local match is found.  To create a local ...",t:"Using a Local Fingerprint Database"},"49":{i:0.0354295399430907,u:"../Content/oo-topics/oo_implementing/Setting Local and Online Lookup Modes.html",a:"You can set lookup modes to determine if GNSDK lookups are done locally or online. GNSDK is designed to operate exactly the same way in either case. You can use the GnUser.LookupMode method to set this option for the user. You can also set this option for specific queries.  The terms local and ...",t:"Setting Local and Online Lookup Modes"},"50":{i:0.0101491000945953,u:"../Content/oo-topics/oo_implementing/Identifying Music.html",a:"The GNSDK supports identifying music in three different modules:  Music-ID—Provides support for identifying music using the following: CD  TOCTable of Contents. An area on CDs, DVDs, and Blu-ray discs that describes the unique track layout of the disc. Text search Fingerprints Gracenote identifier ...",t:"Identifying Music"},"51":{i:0.0120499356104413,u:"../Content/oo-topics/oo_implementing/Identifying Music Using a CD-TOC, Text, or Fingerprints.html",a:"The MusicID module is the GNSDK component that handles recognition of non-streaming music though a CD  TOCTable of Contents. An area on CDs, DVDs, and Blu-ray discs that describes the unique track layout of the disc. , audio source, fingerprint or search text. MusicID is implemented using the ...",t:"Identifying Music Using a CD-TOC, Text, or Fingerprints (MusicID)"},"52":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Best Practices for MusicID Text Searches.html",a:"You can use the GnMusicId class\u0027 FindAlbums and FindMatches methods to identify music files in a collection based on one or more text values. This kind of query is called a text match query.  Possible text inputs are artist name, album title, and track title. You can specify these as fields in the ...",t:"Best Practices for MusicID Text Match Queries"},"53":{i:0.022292536064474,u:"../Content/oo-topics/oo_implementing/Identifying Audio Files.html",a:"The  MusicID-File module can perform recognition using individual audio files or leverage collections of files to provide advanced recognition. When an application provides decoded audio and text data for each file to the library, MusicID-File identifies each file and, if requested, identifies ...",t:"Identifying Audio Files (MusicID-File)"},"54":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Identifying Streaming Audio.html",a:"The functionality for identifying streaming music is contained in the  MusicID-Stream   module. This module contains the  GnMusicIdStream class that is designed to identify raw audio received in a continuous stream. You should instantiate one instance of this class for each audio stream you are ...",t:"Identifying Streaming Music"},"55":{i:0.0101491000945953,u:"../Content/oo-topics/oo_implementing/Processing Returned Metadata Results.html",a:"Processing returned metadata results is pretty straight-forward—objects returned can be traversed and accessed like any other objects. However, there are three things about returned results you need to be aware of: Needs decision—A result could require an additional decision from an application or ...",t:"Processing Returned Metadata Results"},"56":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Accessing Classical Music Metadata.html",a:"GNSDK supports classical music metadata through GnAudioWork objects. This topic describes now to access this metadata. For an overview, see  Classical Music  MetadataData about data. For example, metadata such as the artist, title, and other information about a piece of digital audio such as a song ...",t:"Accessing Classical Music Metadata"},"57":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Accessing Enriched Content.html",a:"To access enriched metadata content, such as cover art and artist images, you can purchase additional metadata entitlements and use the content URLs returned from queries in your application. Enriched content URLs can be returned in every result object (GnAlbum, GnTrack, etc).  To access enriched ...",t:"Accessing Enriched Content"},"58":{i:0.0611265130652676,u:"../Content/oo-topics/oo_implementing/Generating a Playlist.html",a:"You can easily integrate the  PlaylistA set of tracks from a user’s music collection, generated according to the criteria and limits defined by a playlist generator.  SDK into your media management application. Note that your application should already have identifiers for all its media and its own ...",t:"Generating a Playlist"},"59":{i:0.00917431509720665,u:"../Content/c-topics/advanced_topics/Playlist PDL Specification.html",a:"The  GNSDK for Mobile PlaylistA set of tracks from a user’s music collection, generated according to the criteria and limits defined by a playlist generator.  Definition Language (PDL) is a query syntax, similar to Structured Query Language (SQL), that enables flexible custom playlist generation ...",t:"Playlist PDL Specification"},"60":{i:0.00917431509720665,u:"../Content/oo-topics/oo_implementing/Implementing MoodGrid.html",a:"The  MoodTrack-level perceptual descriptor of a piece of music, using emotional terminology that a typical listener might use to describe the audio track; includes hierarchical categories of increasing granularity. See Sonic Attributes.  library allows applications to generate playlists and user ...",t:"Implementing MoodGrid"},"61":{i:0.00917431509720665,u:"../Content/shared-topics/gnsdk_best_practices/Best Practices and Design Requirements.html",a:"Best Practices and Design Requirements",t:"Best Practices and Design Requirements"},"62":{i:0.00917431509720665,u:"../Content/shared-topics/gnsdk_best_practices/Best Practices for Image Dimensions.html",a:"Image Best Practices Gracenote images – in the form of cover art, artist images and more – are integral features in many online music services, as well as home, automotive and mobile entertainment devices. Gracenote maintains a comprehensive database of images in dimensions to accommodate all ...",t:"Best Practices for Image Dimensions"},"63":{i:0.00917431509720665,u:"../Content/shared-topics/gnsdk_best_practices/Best Practices for Audio Stream Recognition.html",a:"The following are recommended best practices for applications that recognize streaming audio. Gracenote periodically conducts analysis on its  MusicID-Stream   product to evaluate its usage and determine if there are ways we can make it even better. Part of this analysis is determining why some  ...",t:"UI Best Practices for Audio Stream Recognition"},"64":{i:0.0212860258461675,u:"../Content/oo-topics/oo_doc_roadmaps/OO-data-model.html",a:"Data Models The following table links to  GNSDK for Mobile data models for the corresponding query response type: Music GnResponseAlbums GnResponseTracks GnResponseContributors  ",t:"Data Models"},"65":{i:0.00917431509720665,u:"../Content/oo-topics/oo_doc_roadmaps/OO-APIRefsDocs.html",a:" You can develop  GNSDK for Mobile applications using several object-oriented languages. The following table describes these APIs and where to find the corresponding API Reference  documentation :  API Name Description Location in Package Objective-C API Reference API descriptions of the GNSDK for ...",t:"API Reference Documentation "},"66":{i:0.00917431509720665,u:"../Content/shared-topics/front_back_matter/GlossaryList.html",a:"GNSDK Glossary",t:"GNSDK Glossary"},"67":{i:0.0169725950763155,u:"../Content/oo-topics/discovery/Implementing MoodGrid.html",a:"Implementing Mood The  MoodTrack-level perceptual descriptor of a piece of music, using emotional terminology that a typical listener might use to describe the audio track; includes hierarchical categories of increasing granularity. See Sonic Attributes.  APIs: Encapsulate Gracenote’s Mood Editorial ...",t:"Implementing MoodGrid"},"68":{i:0.0169725950763155,u:"../Content/oo-topics/oo_doc_roadmaps/OO-DocRoadmapOnline.html",a:"GNSDK for Mobile (iOS) provides a broad range of documentation and sample code to help you develop GNSDK applications.  Document Description GNSDK for Mobile (iOS)  Help  The most comprehensive format of GNSDK for Mobile (iOS) documentation. Includes API Reference and Developers Guide content. GNSDK ...",t:"Start Here - Doc Roadmap"},"69":{i:0.0120499356104413,u:"../Content/oo-topics/oo_implementing/Identifying Streaming Audio (MusicID-Stream).html",a:"\n            \nThe functionality for identifying streaming audio is contained in the  MusicID-Stream   module. This module contains the  GnMusicIdStream class that is designed to identify raw audio received in a continuous stream. You should instantiate one instance of this class for each audio ...",t:"Identifying Streaming Music"},"70":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Clean-up and Collaborative Artists.html",a:"Collaborations between two or more artists can often clutter an entire screen. For example, the Santana album “Supernatural” contains a number of collaborations such as “Santana featuring Rob Thomas” and “Santana featuring Dave Matthews” which would appear individually when navigating by Artist. ...",t:"Collaborative Artists"},"71":{i:0.00917431509720665,u:"../Content/shared-topics/concepts/Embedded Gracenote Database.html",a:"To enable offline functionality in devices that are not connected to the Internet, Gracenote provides a distilled and compressed embedded Gracenote Database (GDB) that you can embed inside devices. The embedded GDB is used by MusicID (CD, Text),  PlaylistA set of tracks from a user’s music ...",t:"Embedded Gracenote Database (GDB)"},});